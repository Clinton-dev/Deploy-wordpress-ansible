# update cache and upgrade all packages
- name: install wordpress
  hosts: myhosts
  remote_user: root

  vars_files:
    - vars/vars.yml

  tasks:
    - name: update apt cache and optionally upgrades system
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600

    - name: install nginx
      apt:
        name: nginx
        state: present

    - name: install mysql server
      apt:
         name: mysql-server
         state: present

    - name: Add PPA for PHP 8.2
      apt_repository:
           repo: ppa:ondrej/php
           update_cache: true
           state: present

    - name: install php and common extensions
      apt:
        name: "{{ php_packages }}"
        state: present

    - name: Create a new database
      community.mysql.mysql_db:
          name: "{{ db_name }}"
          state: present
          login_user: root
          login_password: "{{ db_root_password }}"
          login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create Database User
      community.mysql.mysql_user:
          name: "{{ db_user }}"
          password: "{{ db_password }}"
          priv: "{{ db_name }}.*:ALL"
          state: present
          login_user: root
          login_password: "{{ db_root_password }}"
          login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Create HTML directory
      file:
        path: "/var/www/html/{{ domain_name }}"
        state: directory
        owner: www-data
        group: www-data
        mode: 0755

    - name: Check if wordpress is already downloaded
      ansible.builtin.stat:
        path: "tmp/latest.tar.gz"
      register: stat_result

    - name: Download Wordpress  if not present
      get_url:
        url: "https://wordpress.org/latest.tar.gz"
        dest: "/tmp/latest.tar.gz"
        mode: 0644
      when: not stat_result.stat.exists

    - name: Extract Wordpress
      unarchive:
        src: "/tmp/latest.tar.gz"
        dest: "/var/www/html/{{ domain_name }}"
        group: www-data
        owner: www-data
        remote_src: yes
        extra_opts: [--strip-components=1]
        creates: "/var/www/html/{{ domain_name }}/wp-settings.php"

    - name: Find wordpress archive
      find:
        paths: "/var/www/html/{{ domain_name }}"
        patterns: "*.tar.gz"
      register: archive_files

    - name: Delete archive
      file:
        state: absent
        path: "{{item.path}}"
      loop: "{{ archive_files.files }}"
      when: archive_files.files | length > 0